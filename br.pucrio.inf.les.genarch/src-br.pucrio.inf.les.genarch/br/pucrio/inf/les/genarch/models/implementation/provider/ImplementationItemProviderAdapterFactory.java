/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package br.pucrio.inf.les.genarch.models.implementation.provider;

import br.pucrio.inf.les.genarch.models.implementation.util.ImplementationAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ImplementationItemProviderAdapterFactory extends ImplementationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ImplementationItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.Implementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationItemProvider implementationItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.Implementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationAdapter() {
		if (implementationItemProvider == null) {
			implementationItemProvider = new ImplementationItemProvider(this);
		}

		return implementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationContainerItemProvider implementationContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationContainerAdapter() {
		if (implementationContainerItemProvider == null) {
			implementationContainerItemProvider = new ImplementationContainerItemProvider(this);
		}

		return implementationContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationResourcesContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationResourcesContainerItemProvider implementationResourcesContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationResourcesContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationResourcesContainerAdapter() {
		if (implementationResourcesContainerItemProvider == null) {
			implementationResourcesContainerItemProvider = new ImplementationResourcesContainerItemProvider(this);
		}

		return implementationResourcesContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFragmentContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationFragmentContainerItemProvider implementationFragmentContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFragmentContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationFragmentContainerAdapter() {
		if (implementationFragmentContainerItemProvider == null) {
			implementationFragmentContainerItemProvider = new ImplementationFragmentContainerItemProvider(this);
		}

		return implementationFragmentContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationEntityItemProvider implementationEntityItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationEntityAdapter() {
		if (implementationEntityItemProvider == null) {
			implementationEntityItemProvider = new ImplementationEntityItemProvider(this);
		}

		return implementationEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationComponentItemProvider implementationComponentItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationComponentAdapter() {
		if (implementationComponentItemProvider == null) {
			implementationComponentItemProvider = new ImplementationComponentItemProvider(this);
		}

		return implementationComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationClassItemProvider implementationClassItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationClassAdapter() {
		if (implementationClassItemProvider == null) {
			implementationClassItemProvider = new ImplementationClassItemProvider(this);
		}

		return implementationClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationAspect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationAspectItemProvider implementationAspectItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationAspect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationAspectAdapter() {
		if (implementationAspectItemProvider == null) {
			implementationAspectItemProvider = new ImplementationAspectItemProvider(this);
		}

		return implementationAspectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationFileItemProvider implementationFileItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationFileAdapter() {
		if (implementationFileItemProvider == null) {
			implementationFileItemProvider = new ImplementationFileItemProvider(this);
		}

		return implementationFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationTemplateItemProvider implementationTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationTemplateAdapter() {
		if (implementationTemplateItemProvider == null) {
			implementationTemplateItemProvider = new ImplementationTemplateItemProvider(this);
		}

		return implementationTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFolder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationFolderItemProvider implementationFolderItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFolder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationFolderAdapter() {
		if (implementationFolderItemProvider == null) {
			implementationFolderItemProvider = new ImplementationFolderItemProvider(this);
		}

		return implementationFolderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFragment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationFragmentItemProvider implementationFragmentItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.implementation.ImplementationFragment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationFragmentAdapter() {
		if (implementationFragmentItemProvider == null) {
			implementationFragmentItemProvider = new ImplementationFragmentItemProvider(this);
		}

		return implementationFragmentItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (implementationItemProvider != null) implementationItemProvider.dispose();
		if (implementationContainerItemProvider != null) implementationContainerItemProvider.dispose();
		if (implementationResourcesContainerItemProvider != null) implementationResourcesContainerItemProvider.dispose();
		if (implementationFragmentContainerItemProvider != null) implementationFragmentContainerItemProvider.dispose();
		if (implementationEntityItemProvider != null) implementationEntityItemProvider.dispose();
		if (implementationComponentItemProvider != null) implementationComponentItemProvider.dispose();
		if (implementationClassItemProvider != null) implementationClassItemProvider.dispose();
		if (implementationAspectItemProvider != null) implementationAspectItemProvider.dispose();
		if (implementationFileItemProvider != null) implementationFileItemProvider.dispose();
		if (implementationTemplateItemProvider != null) implementationTemplateItemProvider.dispose();
		if (implementationFolderItemProvider != null) implementationFolderItemProvider.dispose();
		if (implementationFragmentItemProvider != null) implementationFragmentItemProvider.dispose();
	}

}
