/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package br.pucrio.inf.les.genarch.models.configuration.provider;

import br.pucrio.inf.les.genarch.models.configuration.util.ConfigurationAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ConfigurationItemProviderAdapterFactory extends ConfigurationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ConfigurationItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.Configuration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationItemProvider configurationItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.Configuration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationAdapter() {
		if (configurationItemProvider == null) {
			configurationItemProvider = new ConfigurationItemProvider(this);
		}

		return configurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.MappingRelationships} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingRelationshipsItemProvider mappingRelationshipsItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.MappingRelationships}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingRelationshipsAdapter() {
		if (mappingRelationshipsItemProvider == null) {
			mappingRelationshipsItemProvider = new MappingRelationshipsItemProvider(this);
		}

		return mappingRelationshipsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.MappingEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MappingEntityItemProvider mappingEntityItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.MappingEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMappingEntityAdapter() {
		if (mappingEntityItemProvider == null) {
			mappingEntityItemProvider = new MappingEntityItemProvider(this);
		}

		return mappingEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationContainerItemProvider configurationContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationContainerAdapter() {
		if (configurationContainerItemProvider == null) {
			configurationContainerItemProvider = new ConfigurationContainerItemProvider(this);
		}

		return configurationContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationResourcesContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationResourcesContainerItemProvider configurationResourcesContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationResourcesContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationResourcesContainerAdapter() {
		if (configurationResourcesContainerItemProvider == null) {
			configurationResourcesContainerItemProvider = new ConfigurationResourcesContainerItemProvider(this);
		}

		return configurationResourcesContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFragmentContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationFragmentContainerItemProvider configurationFragmentContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFragmentContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationFragmentContainerAdapter() {
		if (configurationFragmentContainerItemProvider == null) {
			configurationFragmentContainerItemProvider = new ConfigurationFragmentContainerItemProvider(this);
		}

		return configurationFragmentContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationComponentItemProvider configurationComponentItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationComponentAdapter() {
		if (configurationComponentItemProvider == null) {
			configurationComponentItemProvider = new ConfigurationComponentItemProvider(this);
		}

		return configurationComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationClassItemProvider configurationClassItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationClassAdapter() {
		if (configurationClassItemProvider == null) {
			configurationClassItemProvider = new ConfigurationClassItemProvider(this);
		}

		return configurationClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationAspect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationAspectItemProvider configurationAspectItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationAspect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationAspectAdapter() {
		if (configurationAspectItemProvider == null) {
			configurationAspectItemProvider = new ConfigurationAspectItemProvider(this);
		}

		return configurationAspectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationTemplateItemProvider configurationTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationTemplateAdapter() {
		if (configurationTemplateItemProvider == null) {
			configurationTemplateItemProvider = new ConfigurationTemplateItemProvider(this);
		}

		return configurationTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationFileItemProvider configurationFileItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationFileAdapter() {
		if (configurationFileItemProvider == null) {
			configurationFileItemProvider = new ConfigurationFileItemProvider(this);
		}

		return configurationFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFolder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationFolderItemProvider configurationFolderItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFolder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationFolderAdapter() {
		if (configurationFolderItemProvider == null) {
			configurationFolderItemProvider = new ConfigurationFolderItemProvider(this);
		}

		return configurationFolderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFragment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationFragmentItemProvider configurationFragmentItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.ConfigurationFragment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationFragmentAdapter() {
		if (configurationFragmentItemProvider == null) {
			configurationFragmentItemProvider = new ConfigurationFragmentItemProvider(this);
		}

		return configurationFragmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.DSMMappings} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DSMMappingsItemProvider dsmMappingsItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.DSMMappings}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDSMMappingsAdapter() {
		if (dsmMappingsItemProvider == null) {
			dsmMappingsItemProvider = new DSMMappingsItemProvider(this);
		}

		return dsmMappingsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.DSM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DSMItemProvider dsmItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.DSM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDSMAdapter() {
		if (dsmItemProvider == null) {
			dsmItemProvider = new DSMItemProvider(this);
		}

		return dsmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.DSMElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DSMElementItemProvider dsmElementItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.DSMElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDSMElementAdapter() {
		if (dsmElementItemProvider == null) {
			dsmElementItemProvider = new DSMElementItemProvider(this);
		}

		return dsmElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.configuration.FeatureExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureExpressionItemProvider featureExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.configuration.FeatureExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureExpressionAdapter() {
		if (featureExpressionItemProvider == null) {
			featureExpressionItemProvider = new FeatureExpressionItemProvider(this);
		}

		return featureExpressionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (configurationItemProvider != null) configurationItemProvider.dispose();
		if (mappingRelationshipsItemProvider != null) mappingRelationshipsItemProvider.dispose();
		if (mappingEntityItemProvider != null) mappingEntityItemProvider.dispose();
		if (configurationContainerItemProvider != null) configurationContainerItemProvider.dispose();
		if (configurationResourcesContainerItemProvider != null) configurationResourcesContainerItemProvider.dispose();
		if (configurationFragmentContainerItemProvider != null) configurationFragmentContainerItemProvider.dispose();
		if (configurationComponentItemProvider != null) configurationComponentItemProvider.dispose();
		if (configurationClassItemProvider != null) configurationClassItemProvider.dispose();
		if (configurationAspectItemProvider != null) configurationAspectItemProvider.dispose();
		if (configurationTemplateItemProvider != null) configurationTemplateItemProvider.dispose();
		if (configurationFileItemProvider != null) configurationFileItemProvider.dispose();
		if (configurationFolderItemProvider != null) configurationFolderItemProvider.dispose();
		if (configurationFragmentItemProvider != null) configurationFragmentItemProvider.dispose();
		if (dsmMappingsItemProvider != null) dsmMappingsItemProvider.dispose();
		if (dsmItemProvider != null) dsmItemProvider.dispose();
		if (dsmElementItemProvider != null) dsmElementItemProvider.dispose();
		if (featureExpressionItemProvider != null) featureExpressionItemProvider.dispose();
	}

}
